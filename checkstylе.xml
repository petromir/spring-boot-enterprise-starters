<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="charset" value="UTF-8"/>
    <property name="fileExtensions" value="java"/>
    <property name="tabWidth" value="2"/>

    <!-- Miscellaneous -->
    <module name="UniqueProperties">
        <property name="fileExtensions" value="yml"/>
    </module>
    <module name="OrderedProperties"/>

    <!-- Size Violations -->
    <module name="FileLength">
        <property name="max" value="1500"/>
    </module>
    <module name="LineLength">
        <property name="max" value="120"/>
    </module>

    <module name="TreeWalker">
        <property name="tabWidth" value="4"/>

        <!-- Filters -->
        <module name="SuppressionXpathSingleFilter">
            <property name="checks" value="HideUtilityClassConstructor"/>
            <property name="query" value="//CLASS_DEF[./OBJBLOCK/METHOD_DEF/IDENT[@text='main']]"/>
        </module>

        <!-- Annotations -->
        <module name="AnnotationLocation">
            <property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
        </module>
        <module name="AnnotationUseStyle"/>
        <module name="MissingDeprecated"/>
        <module name="MissingOverride"/>

        <!-- Block Checks -->
        <module name="AvoidNestedBlocks">
            <property name="allowInSwitchCase" value="true"/>
        </module>
        <module name="EmptyBlock"/>
        <module name="EmptyCatchBlock">
            <property name="commentFormat" value="This is expected|Do nothing"/>
        </module>
        <module name="LeftCurly">
            <property name="ignoreEnums" value="false"/>
        </module>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>

        <!-- Class design -->
        <module name="DesignForExtension">
            <property name="ignoredAnnotations" value="After, AfterClass, Before, BeforeClass, Test, Override"/>
        </module>
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InnerTypeLast"/>
        <module name="InterfaceIsType"/>
        <module name="MutableException"/>
        <module name="OneTopLevelClass"/>
        <module name="ThrowsCount">
            <property name="ignorePrivateMethods" value="false"/>
        </module>
        <module name="VisibilityModifier">
            <property name="packageAllowed" value="true"/>
            <property name="protectedAllowed" value="true"/>
        </module>

        <!-- Coding -->
        <module name="AvoidDoubleBraceInitialization"/>
        <module name="AvoidNoArgumentSuperConstructorCall"/>
        <module name="CovariantEquals"/>
        <module name="DeclarationOrder"/>
        <module name="DefaultComesLast"/>
        <module name="EmptyStatement"/>
        <module name="EqualsAvoidNull"/>
        <module name="EqualsHashCode"/>
        <module name="ExplicitInitialization"/>
        <module name="HiddenField">
            <property name="ignoreSetter" value="true"/>
            <property name="ignoreConstructorParameter" value="true"/>
        </module>
        <module name="IllegalCatch">
            <property name="illegalClassNames"
                      value="java.lang.Throwable, java.lang.Error, java.lang.RuntimeException, java.lang.NullPointerException"/>
        </module>
        <module name="IllegalInstantiation">
            <property name="classes" value="java.lang.Boolean"/>
        </module>
        <module name="IllegalThrows">
            <property name="illegalClassNames"
                      value="java.lang.Throwable, java.lang.Error, java.lang.NullPointerException"/>
        </module>
        <module name="IllegalToken"/>
        <module name="IllegalType">
            <property name="illegalClassNames"
                      value="java.util.GregorianCalendar, java.util.Hashtable, java.util.HashSet, java.util.HashMap,
                       java.util.ArrayList, java.util.LinkedList, java.util.LinkedHashMap, java.util.LinkedHashSet,
                       java.util.TreeSet, java.util.TreeMap, java.util.Vector"/>
        </module>
        <module name="InnerAssignment"/>
        <module name="MagicNumber">
            <property name="ignoreFieldDeclaration" value="true"/>
            <property name="ignoreAnnotation" value="true"/>
        </module>
        <module name="MatchXpath">
            <property name="query"
                      value="//METHOD_DEF[.//LITERAL_PRIVATE and following-sibling::METHOD_DEF[.//LITERAL_PUBLIC]]"/>
            <message key="matchxpath.match" value="Private methods must appear after public methods"/>
        </module>
        <!-- Forbid usage of var-->
        <module name="MatchXpath">
            <property name="query" value="//VARIABLE_DEF[./ASSIGN/EXPR/LITERAL_NEW and ./TYPE/IDENT[@text='var']]"/>
            <message key="matchxpath.match"
                     value="Avoid using var to hide type definition"/>
        </module>
        <module name="MissingSwitchDefault"/>
        <module name="ModifiedControlVariable"/>
        <module name="MultipleStringLiterals">
            <property name="ignoreStringsRegexp"
                      value="(UPDATE){1}|(SELECT){1}|(INSERT){1}|(DELETE){1}|(WHERE){1}|(VALUES){1}|(JOIN)*|(AND)*"/>
        </module>
        <module name="MultipleVariableDeclarations"/>
        <module name="NestedForDepth"/>
        <module name="NestedIfDepth"/>
        <module name="NestedTryDepth"/>
        <module name="NoArrayTrailingComma"/>
        <module name="NoClone"/>
        <module name="NoEnumTrailingComma"/>
        <module name="NoFinalizer"/>
        <module name="OneStatementPerLine"/>
        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="PackageDeclaration"/>
        <module name="ParameterAssignment"/>
        <module name="RequireThis"/>
        <module name="ReturnCount">
            <property name="max" value="0"/>
            <property name="tokens" value="CTOR_DEF"/>
        </module>
        <module name="ReturnCount">
            <property name="maxForVoid" value="1"/>
            <property name="max" value="2"/>
            <property name="tokens" value="LAMBDA, METHOD_DEF"/>
        </module>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="UnnecessaryParentheses"/>
        <module name="UnnecessarySemicolonAfterOuterTypeDeclaration"/>
        <module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
        <module name="UnnecessarySemicolonInEnumeration"/>
        <module name="UnnecessarySemicolonInTryWithResources"/>
        <module name="VariableDeclarationUsageDistance">
            <property name="ignoreFinal" value="false"/>
        </module>

        <!-- Imports -->
        <module name="AvoidStarImport"/>
        <module name="AvoidStaticImport">
            <property name="excludes"
                      value="org.junit.Assert.*,org.mockito.Mockito.*,
                      org.hamcrest.Matchers.*,
                      org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*,
                      org.springframework.test.web.servlet.result.MockMvcRequestBuilders.*,
                      org.springframework.test.web.servlet.result.MockMvcResultHandlers.*,
                      org.springframework.test.web.servlet.result.MockMvcResultMatchers.*,
                      org.assertj.core.api.Assertions.*,org.mockito.ArgumentMatchers.*,
                      org.mockito.AdditionalAnswers.*,
                      org.awaitility.Awaitility.*,
                      org.hamcrest.CoreMatchers.*"/>
        </module>
        <module name="IllegalImport"/>
        <module name="ImportOrder">
            <property name="groups" value="/^java\./,javax,org,com"/>
            <property name="ordered" value="true"/>
            <property name="separated" value="true"/>
            <property name="separatedStaticGroups" value="true"/>
            <property name="option" value="top"/>
            <property name="sortStaticImportsAlphabetically" value="true"/>
        </module>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <!-- Javadoc Comments -->
        <module name="AtclauseOrder"/>
        <module name="InvalidJavadocPosition"/>
        <module name="JavadocBlockTagLocation"/>
        <module name="JavadocContentLocationCheck"/>
        <module name="JavadocMethod">
            <property name="validateThrows" value="true"/>
            <property name="accessModifiers" value="private"/>
            <property name="allowMissingParamTags" value="true"/>
            <property name="allowMissingReturnTag" value="true"/>
        </module>
        <module name="JavadocMissingLeadingAsterisk"/>
        <module name="JavadocMissingWhitespaceAfterAsterisk"/>
        <module name="JavadocParagraph"/>
        <module name="JavadocStyle">
            <property name="checkFirstSentence" value="false"/>
            <property name="checkEmptyJavadoc" value="true"/>
            <property name="tokens" value="ANNOTATION_DEF,CLASS_DEF,ENUM_DEF,INTERFACE_DEF,METHOD_DEF,RECORD_DEF"/>
        </module>
        <module name="JavadocTagContinuationIndentation">
            <property name="offset" value="2"/>
        </module>
        <module name="JavadocType">
            <!-- Records are excluded as this check doesn't recognise type from normal fields -->
            <property name="tokens" value="INTERFACE_DEF,CLASS_DEF,ENUM_DEF,ANNOTATION_DEF"/>
        </module>
        <module name="NonEmptyAtclauseDescription"/>
        <module name="RequireEmptyLineBeforeBlockTagGroup"/>
        <module name="SingleLineJavadoc">
            <property name="ignoredTags" value="@inheritDoc"/>
        </module>
        <module name="SummaryJavadocCheck">
            <property name="forbiddenSummaryFragments" value="^(This method returns.*|Returns.*)"/>
            <property name="period" value=""/>
        </module>

        <!-- Metrics -->
        <module name="BooleanExpressionComplexity"/>
        <module name="ClassDataAbstractionCoupling"/>
        <module name="ClassFanOutComplexity">
            <property name="excludedPackages" value="org.springframework.web.bind.annotation,
            org.springframework.http,
            org.springframework.validation.annotation,
            org.springframework.format.annotation,
            org.springframework.boot.autoconfigure,
            org.springframework.boot.autoconfigure.condition,
            org.springframework.scheduling,
            org.springframework.scheduling.concurrent,
            org.springframework.scheduling.support,
            jakarta.validation.constraints,
            io.swagger.v3.oas.annotations,
            io.swagger.v3.oas.annotations.tags,
            io.swagger.v3.oas.annotations.info,
            io.swagger.v3.oas.annotations.media,"/>
        </module>
        <module name="CyclomaticComplexity">
            <property name="switchBlockAsSingleDecisionPoint" value="true"/>
        </module>
        <module name="JavaNCSS"/>
        <module name="NPathComplexity"/>

        <!-- Miscellaneous -->
        <module name="ArrayTypeStyle"/>
        <module name="AvoidEscapedUnicodeCharacters">
            <property name="allowEscapesForControlCharacters" value="true"/>
            <property name="allowNonPrintableEscapes" value="true"/>
        </module>
        <module name="CommentsIndentation"/>
        <module name="FinalParameters">
            <property name="ignorePrimitiveTypes" value="true"/>
        </module>
        <module name="Indentation">
            <property name="basicOffset" value="4"/>
            <property name="caseIndent" value="4"/>
            <property name="throwsIndent" value="2"/>
            <property name="arrayInitIndent" value="2"/>
            <property name="lineWrappingIndentation" value="4"/>
            <property name="braceAdjustment" value="2"/>
            <property name="forceStrictCondition" value="false"/>
        </module>
        <module name="OuterTypeFilename"/>
        <module name="TodoComment">
            <property name="format" value="(todo|fixme):"/>
        </module>
        <module name="TrailingComment"/>
        <module name="UncommentedMain">
            <property name="excludedClasses" value="Application$"/>
        </module>
        <module name="UpperEll"/>

        <!-- Modifiers -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Naming Convention -->
        <module name="AbbreviationAsWordInName"/>
        <module name="AbstractClassName">
            <property name="ignoreName" value="true"/>
        </module>
        <module name="CatchParameterName"/>
        <module name="ClassTypeParameterName">
            <property name="format" value="^[A-Z_]{1,}$"/>
        </module>
        <module name="ConstantName"/>
        <module name="IllegalIdentifierName"/>
        <module name="InterfaceTypeParameterName">
            <property name="format" value="^[A-Z_]{1,}$"/>
        </module>
        <module name="LambdaParameterName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName">
            <property name="allowOneCharVarInForLoop" value="true"/>
        </module>
        <module name="MemberName"/>
        <module name="MethodTypeParameterName">
            <property name="format" value="^[A-Z_]{1,}$"/>
        </module>
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
        </module>
        <module name="ParameterName">
            <property name="ignoreOverridden" value="true"/>
        </module>
        <module name="PatternVariableName"/>
        <module name="RecordComponentName"/>
        <module name="RecordTypeParameterName">
            <property name="format" value="^[A-Z_]{1,}$"/>
        </module>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Regexp -->
        <module name="Regexp">
            <property name="format" value="System\.out|System\.err|\.printStackTrace\(\)"/>
            <property name="ignoreComments" value="true"/>
            <property name="illegalPattern" value="true"/>
        </module>

        <!-- Size Violations -->
        <module name="AnonInnerLength">
            <property name="max" value="30"/>
        </module>
        <module name="ExecutableStatementCount">
            <property name="max" value="20"/>
            <!-- Allow copy constructor -->
            <property name="tokens" value="METHOD_DEF,INSTANCE_INIT,STATIC_INIT"/>
        </module>
        <module name="LambdaBodyLength">
            <property name="max" value="20"/>
        </module>
        <module name="MethodCount">
            <property name="maxTotal" value="25"/>
        </module>
        <module name="MethodLength">
            <property name="tokens" value="METHOD_DEF"/>
            <property name="max" value="60"/>
            <property name="countEmpty" value="false"/>
        </module>
        <module name="OuterTypeNumber"/>
        <!-- <module name="RecordComponentNumber"/> We don't want to limit ourselves with a concrete number -->
        <module name="ParameterNumber">
            <property name="ignoreOverriddenMethods" value="true"/>
        </module>

        <!-- Whitespace -->
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad"/>
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
            <property name="allowMultipleEmptyLines" value="false"/>
            <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
        </module>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoLineWrap"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="SeparatorWrap">
            <property name="tokens" value="DOT"/>
            <property name="option" value="nl"/>
        </module>
        <module name="SingleSpaceSeparator"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround">
            <property name="allowEmptyTypes" value="true"/>
        </module>

    </module>

</module>